// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dccncli.proto

package dccncli

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The dccn client request message containing the user's token
type AddTaskRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Datacenterid         int64    `protobuf:"varint,3,opt,name=datacenterid,proto3" json:"datacenterid,omitempty"`
	Usertoken            string   `protobuf:"bytes,4,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Replica              int64    `protobuf:"varint,5,opt,name=replica,proto3" json:"replica,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskRequest) Reset()         { *m = AddTaskRequest{} }
func (m *AddTaskRequest) String() string { return proto.CompactTextString(m) }
func (*AddTaskRequest) ProtoMessage()    {}
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{0}
}

func (m *AddTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskRequest.Unmarshal(m, b)
}
func (m *AddTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskRequest.Marshal(b, m, deterministic)
}
func (m *AddTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskRequest.Merge(m, src)
}
func (m *AddTaskRequest) XXX_Size() int {
	return xxx_messageInfo_AddTaskRequest.Size(m)
}
func (m *AddTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskRequest proto.InternalMessageInfo

func (m *AddTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddTaskRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AddTaskRequest) GetDatacenterid() int64 {
	if m != nil {
		return m.Datacenterid
	}
	return 0
}

func (m *AddTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *AddTaskRequest) GetReplica() int64 {
	if m != nil {
		return m.Replica
	}
	return 0
}

// The Ankr Hub response message containing the success or failure
type AddTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Reason               string   `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTaskResponse) Reset()         { *m = AddTaskResponse{} }
func (m *AddTaskResponse) String() string { return proto.CompactTextString(m) }
func (*AddTaskResponse) ProtoMessage()    {}
func (*AddTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{1}
}

func (m *AddTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTaskResponse.Unmarshal(m, b)
}
func (m *AddTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTaskResponse.Marshal(b, m, deterministic)
}
func (m *AddTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTaskResponse.Merge(m, src)
}
func (m *AddTaskResponse) XXX_Size() int {
	return xxx_messageInfo_AddTaskResponse.Size(m)
}
func (m *AddTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTaskResponse proto.InternalMessageInfo

func (m *AddTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *AddTaskResponse) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *AddTaskResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// The Client List request message
type TaskListRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskListRequest) Reset()         { *m = TaskListRequest{} }
func (m *TaskListRequest) String() string { return proto.CompactTextString(m) }
func (*TaskListRequest) ProtoMessage()    {}
func (*TaskListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{2}
}

func (m *TaskListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListRequest.Unmarshal(m, b)
}
func (m *TaskListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListRequest.Marshal(b, m, deterministic)
}
func (m *TaskListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListRequest.Merge(m, src)
}
func (m *TaskListRequest) XXX_Size() int {
	return xxx_messageInfo_TaskListRequest.Size(m)
}
func (m *TaskListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListRequest proto.InternalMessageInfo

func (m *TaskListRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type TaskInfo struct {
	Taskid               int64    `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Taskname             string   `protobuf:"bytes,2,opt,name=taskname,proto3" json:"taskname,omitempty"`
	Uptime               uint32   `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Creationdate         uint64   `protobuf:"varint,4,opt,name=creationdate,proto3" json:"creationdate,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Datacenter           string   `protobuf:"bytes,6,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Replica              int64    `protobuf:"varint,7,opt,name=replica,proto3" json:"replica,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskInfo) Reset()         { *m = TaskInfo{} }
func (m *TaskInfo) String() string { return proto.CompactTextString(m) }
func (*TaskInfo) ProtoMessage()    {}
func (*TaskInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{3}
}

func (m *TaskInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInfo.Unmarshal(m, b)
}
func (m *TaskInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInfo.Marshal(b, m, deterministic)
}
func (m *TaskInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInfo.Merge(m, src)
}
func (m *TaskInfo) XXX_Size() int {
	return xxx_messageInfo_TaskInfo.Size(m)
}
func (m *TaskInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInfo proto.InternalMessageInfo

func (m *TaskInfo) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *TaskInfo) GetTaskname() string {
	if m != nil {
		return m.Taskname
	}
	return ""
}

func (m *TaskInfo) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *TaskInfo) GetCreationdate() uint64 {
	if m != nil {
		return m.Creationdate
	}
	return 0
}

func (m *TaskInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskInfo) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *TaskInfo) GetReplica() int64 {
	if m != nil {
		return m.Replica
	}
	return 0
}

type TaskListResponse struct {
	Tasksinfo            []*TaskInfo `protobuf:"bytes,1,rep,name=tasksinfo,proto3" json:"tasksinfo,omitempty"`
	Reason               string      `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskListResponse) Reset()         { *m = TaskListResponse{} }
func (m *TaskListResponse) String() string { return proto.CompactTextString(m) }
func (*TaskListResponse) ProtoMessage()    {}
func (*TaskListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{4}
}

func (m *TaskListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskListResponse.Unmarshal(m, b)
}
func (m *TaskListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskListResponse.Marshal(b, m, deterministic)
}
func (m *TaskListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskListResponse.Merge(m, src)
}
func (m *TaskListResponse) XXX_Size() int {
	return xxx_messageInfo_TaskListResponse.Size(m)
}
func (m *TaskListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskListResponse proto.InternalMessageInfo

func (m *TaskListResponse) GetTasksinfo() []*TaskInfo {
	if m != nil {
		return m.Tasksinfo
	}
	return nil
}

func (m *TaskListResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// DataCenterList request message
type DataCenterListRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataCenterListRequest) Reset()         { *m = DataCenterListRequest{} }
func (m *DataCenterListRequest) String() string { return proto.CompactTextString(m) }
func (*DataCenterListRequest) ProtoMessage()    {}
func (*DataCenterListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{5}
}

func (m *DataCenterListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataCenterListRequest.Unmarshal(m, b)
}
func (m *DataCenterListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataCenterListRequest.Marshal(b, m, deterministic)
}
func (m *DataCenterListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataCenterListRequest.Merge(m, src)
}
func (m *DataCenterListRequest) XXX_Size() int {
	return xxx_messageInfo_DataCenterListRequest.Size(m)
}
func (m *DataCenterListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataCenterListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataCenterListRequest proto.InternalMessageInfo

func (m *DataCenterListRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type DataCenterInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataCenterInfo) Reset()         { *m = DataCenterInfo{} }
func (m *DataCenterInfo) String() string { return proto.CompactTextString(m) }
func (*DataCenterInfo) ProtoMessage()    {}
func (*DataCenterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{6}
}

func (m *DataCenterInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataCenterInfo.Unmarshal(m, b)
}
func (m *DataCenterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataCenterInfo.Marshal(b, m, deterministic)
}
func (m *DataCenterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataCenterInfo.Merge(m, src)
}
func (m *DataCenterInfo) XXX_Size() int {
	return xxx_messageInfo_DataCenterInfo.Size(m)
}
func (m *DataCenterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DataCenterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DataCenterInfo proto.InternalMessageInfo

func (m *DataCenterInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataCenterInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataCenterInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DataCenterListResponse struct {
	DcList               []*DataCenterInfo `protobuf:"bytes,1,rep,name=dcList,proto3" json:"dcList,omitempty"`
	Reason               string            `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataCenterListResponse) Reset()         { *m = DataCenterListResponse{} }
func (m *DataCenterListResponse) String() string { return proto.CompactTextString(m) }
func (*DataCenterListResponse) ProtoMessage()    {}
func (*DataCenterListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{7}
}

func (m *DataCenterListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataCenterListResponse.Unmarshal(m, b)
}
func (m *DataCenterListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataCenterListResponse.Marshal(b, m, deterministic)
}
func (m *DataCenterListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataCenterListResponse.Merge(m, src)
}
func (m *DataCenterListResponse) XXX_Size() int {
	return xxx_messageInfo_DataCenterListResponse.Size(m)
}
func (m *DataCenterListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataCenterListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataCenterListResponse proto.InternalMessageInfo

func (m *DataCenterListResponse) GetDcList() []*DataCenterInfo {
	if m != nil {
		return m.DcList
	}
	return nil
}

func (m *DataCenterListResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type CancelTaskRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskRequest) Reset()         { *m = CancelTaskRequest{} }
func (m *CancelTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTaskRequest) ProtoMessage()    {}
func (*CancelTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{8}
}

func (m *CancelTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskRequest.Unmarshal(m, b)
}
func (m *CancelTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskRequest.Marshal(b, m, deterministic)
}
func (m *CancelTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskRequest.Merge(m, src)
}
func (m *CancelTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTaskRequest.Size(m)
}
func (m *CancelTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskRequest proto.InternalMessageInfo

func (m *CancelTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *CancelTaskRequest) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

type CancelTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTaskResponse) Reset()         { *m = CancelTaskResponse{} }
func (m *CancelTaskResponse) String() string { return proto.CompactTextString(m) }
func (*CancelTaskResponse) ProtoMessage()    {}
func (*CancelTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{9}
}

func (m *CancelTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTaskResponse.Unmarshal(m, b)
}
func (m *CancelTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTaskResponse.Marshal(b, m, deterministic)
}
func (m *CancelTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTaskResponse.Merge(m, src)
}
func (m *CancelTaskResponse) XXX_Size() int {
	return xxx_messageInfo_CancelTaskResponse.Size(m)
}
func (m *CancelTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTaskResponse proto.InternalMessageInfo

func (m *CancelTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CancelTaskResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type PurgeTaskRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgeTaskRequest) Reset()         { *m = PurgeTaskRequest{} }
func (m *PurgeTaskRequest) String() string { return proto.CompactTextString(m) }
func (*PurgeTaskRequest) ProtoMessage()    {}
func (*PurgeTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{10}
}

func (m *PurgeTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeTaskRequest.Unmarshal(m, b)
}
func (m *PurgeTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeTaskRequest.Marshal(b, m, deterministic)
}
func (m *PurgeTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeTaskRequest.Merge(m, src)
}
func (m *PurgeTaskRequest) XXX_Size() int {
	return xxx_messageInfo_PurgeTaskRequest.Size(m)
}
func (m *PurgeTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeTaskRequest proto.InternalMessageInfo

func (m *PurgeTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *PurgeTaskRequest) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

type PurgeTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgeTaskResponse) Reset()         { *m = PurgeTaskResponse{} }
func (m *PurgeTaskResponse) String() string { return proto.CompactTextString(m) }
func (*PurgeTaskResponse) ProtoMessage()    {}
func (*PurgeTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{11}
}

func (m *PurgeTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeTaskResponse.Unmarshal(m, b)
}
func (m *PurgeTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeTaskResponse.Marshal(b, m, deterministic)
}
func (m *PurgeTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeTaskResponse.Merge(m, src)
}
func (m *PurgeTaskResponse) XXX_Size() int {
	return xxx_messageInfo_PurgeTaskResponse.Size(m)
}
func (m *PurgeTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeTaskResponse proto.InternalMessageInfo

func (m *PurgeTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PurgeTaskResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type UpdateTaskRequest struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Taskid               int64    `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Replica              int64    `protobuf:"varint,4,opt,name=replica,proto3" json:"replica,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskRequest) Reset()         { *m = UpdateTaskRequest{} }
func (m *UpdateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskRequest) ProtoMessage()    {}
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{12}
}

func (m *UpdateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskRequest.Unmarshal(m, b)
}
func (m *UpdateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskRequest.Merge(m, src)
}
func (m *UpdateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskRequest.Size(m)
}
func (m *UpdateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskRequest proto.InternalMessageInfo

func (m *UpdateTaskRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *UpdateTaskRequest) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *UpdateTaskRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateTaskRequest) GetReplica() int64 {
	if m != nil {
		return m.Replica
	}
	return 0
}

type UpdateTaskResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTaskResponse) Reset()         { *m = UpdateTaskResponse{} }
func (m *UpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTaskResponse) ProtoMessage()    {}
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{13}
}

func (m *UpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTaskResponse.Unmarshal(m, b)
}
func (m *UpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTaskResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTaskResponse.Merge(m, src)
}
func (m *UpdateTaskResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTaskResponse.Size(m)
}
func (m *UpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTaskResponse proto.InternalMessageInfo

func (m *UpdateTaskResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UpdateTaskResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TaskDetailRequest struct {
	Taskid               int64    `protobuf:"varint,1,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Usertoken            string   `protobuf:"bytes,2,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskDetailRequest) Reset()         { *m = TaskDetailRequest{} }
func (m *TaskDetailRequest) String() string { return proto.CompactTextString(m) }
func (*TaskDetailRequest) ProtoMessage()    {}
func (*TaskDetailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{14}
}

func (m *TaskDetailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetailRequest.Unmarshal(m, b)
}
func (m *TaskDetailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetailRequest.Marshal(b, m, deterministic)
}
func (m *TaskDetailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetailRequest.Merge(m, src)
}
func (m *TaskDetailRequest) XXX_Size() int {
	return xxx_messageInfo_TaskDetailRequest.Size(m)
}
func (m *TaskDetailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetailRequest proto.InternalMessageInfo

func (m *TaskDetailRequest) GetTaskid() int64 {
	if m != nil {
		return m.Taskid
	}
	return 0
}

func (m *TaskDetailRequest) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

type TaskDetailResponse struct {
	Body                 string    `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Taskinfo             *TaskInfo `protobuf:"bytes,2,opt,name=taskinfo,proto3" json:"taskinfo,omitempty"`
	Reason               string    `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TaskDetailResponse) Reset()         { *m = TaskDetailResponse{} }
func (m *TaskDetailResponse) String() string { return proto.CompactTextString(m) }
func (*TaskDetailResponse) ProtoMessage()    {}
func (*TaskDetailResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{15}
}

func (m *TaskDetailResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskDetailResponse.Unmarshal(m, b)
}
func (m *TaskDetailResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskDetailResponse.Marshal(b, m, deterministic)
}
func (m *TaskDetailResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskDetailResponse.Merge(m, src)
}
func (m *TaskDetailResponse) XXX_Size() int {
	return xxx_messageInfo_TaskDetailResponse.Size(m)
}
func (m *TaskDetailResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskDetailResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskDetailResponse proto.InternalMessageInfo

func (m *TaskDetailResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *TaskDetailResponse) GetTaskinfo() *TaskInfo {
	if m != nil {
		return m.Taskinfo
	}
	return nil
}

func (m *TaskDetailResponse) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type AuthRequest struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PubkeyX              int64    `protobuf:"varint,2,opt,name=pubkeyX,proto3" json:"pubkeyX,omitempty"`
	PubkeyY              int64    `protobuf:"varint,3,opt,name=pubkeyY,proto3" json:"pubkeyY,omitempty"`
	SignatureR           int64    `protobuf:"varint,4,opt,name=signatureR,proto3" json:"signatureR,omitempty"`
	SignatureS           int64    `protobuf:"varint,5,opt,name=signatureS,proto3" json:"signatureS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{16}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AuthRequest) GetPubkeyX() int64 {
	if m != nil {
		return m.PubkeyX
	}
	return 0
}

func (m *AuthRequest) GetPubkeyY() int64 {
	if m != nil {
		return m.PubkeyY
	}
	return 0
}

func (m *AuthRequest) GetSignatureR() int64 {
	if m != nil {
		return m.SignatureR
	}
	return 0
}

func (m *AuthRequest) GetSignatureS() int64 {
	if m != nil {
		return m.SignatureS
	}
	return 0
}

type AuthResponse struct {
	Usertoken            string   `protobuf:"bytes,1,opt,name=usertoken,proto3" json:"usertoken,omitempty"`
	Success              bool     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97ba3c0cb7e5628c, []int{17}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetUsertoken() string {
	if m != nil {
		return m.Usertoken
	}
	return ""
}

func (m *AuthResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*AddTaskRequest)(nil), "dccncli.AddTaskRequest")
	proto.RegisterType((*AddTaskResponse)(nil), "dccncli.AddTaskResponse")
	proto.RegisterType((*TaskListRequest)(nil), "dccncli.TaskListRequest")
	proto.RegisterType((*TaskInfo)(nil), "dccncli.TaskInfo")
	proto.RegisterType((*TaskListResponse)(nil), "dccncli.TaskListResponse")
	proto.RegisterType((*DataCenterListRequest)(nil), "dccncli.DataCenterListRequest")
	proto.RegisterType((*DataCenterInfo)(nil), "dccncli.DataCenterInfo")
	proto.RegisterType((*DataCenterListResponse)(nil), "dccncli.DataCenterListResponse")
	proto.RegisterType((*CancelTaskRequest)(nil), "dccncli.CancelTaskRequest")
	proto.RegisterType((*CancelTaskResponse)(nil), "dccncli.CancelTaskResponse")
	proto.RegisterType((*PurgeTaskRequest)(nil), "dccncli.PurgeTaskRequest")
	proto.RegisterType((*PurgeTaskResponse)(nil), "dccncli.PurgeTaskResponse")
	proto.RegisterType((*UpdateTaskRequest)(nil), "dccncli.UpdateTaskRequest")
	proto.RegisterType((*UpdateTaskResponse)(nil), "dccncli.UpdateTaskResponse")
	proto.RegisterType((*TaskDetailRequest)(nil), "dccncli.TaskDetailRequest")
	proto.RegisterType((*TaskDetailResponse)(nil), "dccncli.TaskDetailResponse")
	proto.RegisterType((*AuthRequest)(nil), "dccncli.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "dccncli.AuthResponse")
}

func init() { proto.RegisterFile("dccncli.proto", fileDescriptor_97ba3c0cb7e5628c) }

var fileDescriptor_97ba3c0cb7e5628c = []byte{
	// 728 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xcf, 0x4e, 0xdc, 0x3e,
	0x10, 0x26, 0xbb, 0x61, 0x97, 0x1d, 0xfe, 0xae, 0xf5, 0x83, 0x5f, 0x9a, 0x56, 0x14, 0xe5, 0xc4,
	0xa5, 0x20, 0x51, 0x71, 0xad, 0x84, 0x58, 0xb5, 0x45, 0xe2, 0x50, 0x85, 0x56, 0x2a, 0xea, 0xc9,
	0x24, 0x86, 0x46, 0xbb, 0x24, 0x69, 0xec, 0xa8, 0xda, 0xf7, 0xe8, 0xbd, 0xcf, 0xd1, 0x77, 0xe8,
	0x43, 0x55, 0x76, 0x1c, 0x7b, 0xbc, 0x7f, 0x68, 0x05, 0x37, 0xcf, 0xcc, 0xce, 0xf8, 0x9b, 0xcf,
	0x33, 0x5f, 0x16, 0x36, 0xd3, 0x24, 0xc9, 0x93, 0x49, 0x76, 0x54, 0x56, 0x85, 0x28, 0x48, 0x5f,
	0x9b, 0xd1, 0x0f, 0x0f, 0xb6, 0xce, 0xd2, 0xf4, 0x23, 0xe5, 0xe3, 0x98, 0x7d, 0xab, 0x19, 0x17,
	0x84, 0x80, 0x9f, 0xd3, 0x7b, 0x16, 0x78, 0x07, 0xde, 0xe1, 0x20, 0x56, 0x67, 0xe9, 0x13, 0xd3,
	0x92, 0x05, 0x9d, 0xc6, 0x27, 0xcf, 0x24, 0x82, 0x8d, 0x94, 0x0a, 0x9a, 0xb0, 0x5c, 0xb0, 0x2a,
	0x4b, 0x83, 0xee, 0x81, 0x77, 0xd8, 0x8d, 0x1d, 0x1f, 0x79, 0x01, 0x83, 0x9a, 0xb3, 0x4a, 0x14,
	0x63, 0x96, 0x07, 0xbe, 0x4a, 0xb6, 0x0e, 0x12, 0x40, 0xbf, 0x62, 0xe5, 0x24, 0x4b, 0x68, 0xb0,
	0xaa, 0x92, 0x5b, 0x33, 0xba, 0x86, 0x6d, 0x83, 0x8a, 0x97, 0x45, 0xce, 0x19, 0xd9, 0x83, 0x1e,
	0x17, 0x54, 0xd4, 0x5c, 0x03, 0xd3, 0x96, 0xf4, 0x0b, 0xca, 0xc7, 0x59, 0xaa, 0xc0, 0x75, 0x63,
	0x6d, 0x49, 0x7f, 0xc5, 0x28, 0x2f, 0x72, 0x05, 0x6c, 0x10, 0x6b, 0x2b, 0x3a, 0x86, 0x6d, 0x59,
	0xf7, 0x32, 0xe3, 0xa2, 0xed, 0xd8, 0x41, 0xe9, 0xcd, 0xa0, 0x8c, 0x7e, 0x7b, 0xb0, 0x26, 0x33,
	0x2e, 0xf2, 0xdb, 0x02, 0xdd, 0xe6, 0x39, 0xb7, 0x85, 0xb0, 0x26, 0x4f, 0x8a, 0xb8, 0x86, 0x24,
	0x63, 0xcb, 0x9c, 0xba, 0x14, 0xd9, 0x3d, 0x53, 0x48, 0x36, 0x63, 0x6d, 0x49, 0x02, 0x93, 0x8a,
	0x51, 0x91, 0x15, 0x79, 0x4a, 0x05, 0x53, 0xfc, 0xf8, 0xb1, 0xe3, 0x43, 0x5d, 0xaf, 0x3a, 0x5d,
	0xef, 0x03, 0x58, 0xa2, 0x83, 0x9e, 0x8a, 0x21, 0x0f, 0xa6, 0xb6, 0xef, 0x52, 0xfb, 0x05, 0x76,
	0x6c, 0xff, 0x9a, 0xdb, 0x63, 0x18, 0x48, 0xb4, 0x3c, 0xcb, 0x6f, 0x8b, 0xc0, 0x3b, 0xe8, 0x1e,
	0xae, 0x9f, 0x0c, 0x8f, 0xda, 0x89, 0x69, 0x7b, 0x8f, 0xed, 0x6f, 0x10, 0xb9, 0x1d, 0x87, 0xdc,
	0x53, 0xd8, 0x1d, 0x51, 0x41, 0xcf, 0x15, 0x88, 0x7f, 0xa7, 0xf8, 0x12, 0xb6, 0x6c, 0x9a, 0xe2,
	0x79, 0x0b, 0x3a, 0x86, 0xe3, 0x4e, 0x96, 0x9a, 0xa1, 0xec, 0xa0, 0xa1, 0xb4, 0xdc, 0x74, 0x31,
	0x37, 0x11, 0x85, 0xbd, 0x59, 0x10, 0xa6, 0xcf, 0x5e, 0x9a, 0x48, 0x8f, 0x6e, 0xf2, 0x7f, 0xd3,
	0xa4, 0x7b, 0x7d, 0xac, 0x7f, 0xb6, 0xb4, 0xcf, 0x0b, 0x18, 0x9e, 0xd3, 0x3c, 0x61, 0x13, 0xbc,
	0x38, 0x0f, 0xf6, 0xb8, 0x6c, 0x4e, 0xa3, 0x11, 0x10, 0x5c, 0xea, 0xef, 0xd3, 0xbe, 0x10, 0xd0,
	0x7b, 0xd8, 0xf9, 0x50, 0x57, 0x77, 0xec, 0xe9, 0x78, 0xce, 0x61, 0x88, 0x2a, 0x3d, 0x12, 0xce,
	0x77, 0x18, 0x7e, 0x2a, 0xe5, 0x00, 0x3f, 0x19, 0x8f, 0x79, 0xf9, 0x2e, 0x7a, 0x79, 0x34, 0xdd,
	0xbe, 0x3b, 0xdd, 0x23, 0x20, 0xf8, 0xe2, 0x47, 0xc2, 0xbf, 0x80, 0xa1, 0xcc, 0x1f, 0x31, 0x41,
	0xb3, 0x49, 0x0b, 0x7f, 0xd9, 0xea, 0x3b, 0x6d, 0x75, 0x66, 0x47, 0xbb, 0x00, 0x82, 0x4b, 0x69,
	0x40, 0x04, 0xfc, 0x9b, 0x22, 0x9d, 0xb6, 0x1a, 0x2b, 0xcf, 0xe4, 0x55, 0x23, 0x21, 0x6a, 0x07,
	0x65, 0x99, 0x85, 0x3b, 0x68, 0x7e, 0xb2, 0x54, 0xdf, 0x7e, 0x7a, 0xb0, 0x7e, 0x56, 0x8b, 0xaf,
	0x88, 0x75, 0xa9, 0x36, 0x5c, 0xd0, 0xfb, 0x52, 0x23, 0xb7, 0x0e, 0xc9, 0x64, 0x59, 0xdf, 0x8c,
	0xd9, 0xf4, 0xb3, 0xa6, 0xbd, 0x35, 0x6d, 0xe4, 0x5a, 0x2b, 0x7b, 0x6b, 0x4a, 0xed, 0xe1, 0xd9,
	0x5d, 0x4e, 0x45, 0x5d, 0xb1, 0x58, 0x3f, 0x00, 0xf2, 0x38, 0xf1, 0x2b, 0xad, 0xec, 0xc8, 0x13,
	0xbd, 0x85, 0x8d, 0x06, 0xa0, 0x26, 0xe3, 0xe1, 0xb9, 0x08, 0xa0, 0xcf, 0xeb, 0x24, 0x61, 0x9c,
	0x2b, 0x84, 0x6b, 0x71, 0x6b, 0x9e, 0xfc, 0xf2, 0xa1, 0xfd, 0x8e, 0x91, 0x37, 0xd0, 0xd7, 0x1f,
	0x0c, 0x62, 0x97, 0xda, 0xfd, 0xb0, 0x85, 0xc1, 0x7c, 0xa0, 0x41, 0x10, 0xad, 0x90, 0xb3, 0x46,
	0xe3, 0xd5, 0xd2, 0x07, 0x0e, 0xed, 0x48, 0xc5, 0xc2, 0x67, 0x0b, 0x22, 0xa6, 0xc4, 0x15, 0x16,
	0x31, 0x55, 0x68, 0x7f, 0x81, 0xbc, 0xe0, 0x72, 0x2f, 0x97, 0xc6, 0x4d, 0xd1, 0x77, 0x00, 0x56,
	0x1d, 0x48, 0x68, 0x12, 0xe6, 0xd4, 0x27, 0x7c, 0xbe, 0x30, 0x66, 0x0a, 0x8d, 0x60, 0x60, 0xd6,
	0x9a, 0xd8, 0x3e, 0x66, 0x45, 0x23, 0x0c, 0x17, 0x85, 0x30, 0x1c, 0xbb, 0x5e, 0x08, 0xce, 0xdc,
	0xb2, 0x23, 0x38, 0xf3, 0xfb, 0xd8, 0x14, 0xb2, 0x6b, 0x81, 0x0a, 0xcd, 0xad, 0x1d, 0x2a, 0x34,
	0xbf, 0x47, 0xd1, 0x0a, 0x39, 0x05, 0x5f, 0x0e, 0x13, 0xf9, 0xcf, 0x3e, 0xae, 0x1d, 0xfe, 0x70,
	0x77, 0xc6, 0xdb, 0xa6, 0xdd, 0xf4, 0xd4, 0xff, 0xa0, 0xd7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x4d, 0xa2, 0xc0, 0xdf, 0x18, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DccncliClient is the client API for Dccncli service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DccncliClient interface {
	// Sends request to start a task and list task
	AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error)
	TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error)
	DataCenterList(ctx context.Context, in *DataCenterListRequest, opts ...grpc.CallOption) (*DataCenterListResponse, error)
	CancelTask(ctx context.Context, in *CancelTaskRequest, opts ...grpc.CallOption) (*CancelTaskResponse, error)
	PurgeTask(ctx context.Context, in *PurgeTaskRequest, opts ...grpc.CallOption) (*PurgeTaskResponse, error)
	UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error)
	TaskDetail(ctx context.Context, in *TaskDetailRequest, opts ...grpc.CallOption) (*TaskDetailResponse, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type dccncliClient struct {
	cc *grpc.ClientConn
}

func NewDccncliClient(cc *grpc.ClientConn) DccncliClient {
	return &dccncliClient{cc}
}

func (c *dccncliClient) AddTask(ctx context.Context, in *AddTaskRequest, opts ...grpc.CallOption) (*AddTaskResponse, error) {
	out := new(AddTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) TaskList(ctx context.Context, in *TaskListRequest, opts ...grpc.CallOption) (*TaskListResponse, error) {
	out := new(TaskListResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/TaskList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) DataCenterList(ctx context.Context, in *DataCenterListRequest, opts ...grpc.CallOption) (*DataCenterListResponse, error) {
	out := new(DataCenterListResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/DataCenterList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) CancelTask(ctx context.Context, in *CancelTaskRequest, opts ...grpc.CallOption) (*CancelTaskResponse, error) {
	out := new(CancelTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/CancelTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) PurgeTask(ctx context.Context, in *PurgeTaskRequest, opts ...grpc.CallOption) (*PurgeTaskResponse, error) {
	out := new(PurgeTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/PurgeTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) UpdateTask(ctx context.Context, in *UpdateTaskRequest, opts ...grpc.CallOption) (*UpdateTaskResponse, error) {
	out := new(UpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) TaskDetail(ctx context.Context, in *TaskDetailRequest, opts ...grpc.CallOption) (*TaskDetailResponse, error) {
	out := new(TaskDetailResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/TaskDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dccncliClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/dccncli.dccncli/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DccncliServer is the server API for Dccncli service.
type DccncliServer interface {
	// Sends request to start a task and list task
	AddTask(context.Context, *AddTaskRequest) (*AddTaskResponse, error)
	TaskList(context.Context, *TaskListRequest) (*TaskListResponse, error)
	DataCenterList(context.Context, *DataCenterListRequest) (*DataCenterListResponse, error)
	CancelTask(context.Context, *CancelTaskRequest) (*CancelTaskResponse, error)
	PurgeTask(context.Context, *PurgeTaskRequest) (*PurgeTaskResponse, error)
	UpdateTask(context.Context, *UpdateTaskRequest) (*UpdateTaskResponse, error)
	TaskDetail(context.Context, *TaskDetailRequest) (*TaskDetailResponse, error)
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
}

func RegisterDccncliServer(s *grpc.Server, srv DccncliServer) {
	s.RegisterService(&_Dccncli_serviceDesc, srv)
}

func _Dccncli_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).AddTask(ctx, req.(*AddTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_TaskList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).TaskList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/TaskList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).TaskList(ctx, req.(*TaskListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_DataCenterList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataCenterListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).DataCenterList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/DataCenterList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).DataCenterList(ctx, req.(*DataCenterListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_CancelTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).CancelTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/CancelTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).CancelTask(ctx, req.(*CancelTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_PurgeTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgeTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).PurgeTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/PurgeTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).PurgeTask(ctx, req.(*PurgeTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).UpdateTask(ctx, req.(*UpdateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_TaskDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).TaskDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/TaskDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).TaskDetail(ctx, req.(*TaskDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dccncli_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DccncliServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dccncli.dccncli/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DccncliServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dccncli_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dccncli.dccncli",
	HandlerType: (*DccncliServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _Dccncli_AddTask_Handler,
		},
		{
			MethodName: "TaskList",
			Handler:    _Dccncli_TaskList_Handler,
		},
		{
			MethodName: "DataCenterList",
			Handler:    _Dccncli_DataCenterList_Handler,
		},
		{
			MethodName: "CancelTask",
			Handler:    _Dccncli_CancelTask_Handler,
		},
		{
			MethodName: "PurgeTask",
			Handler:    _Dccncli_PurgeTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _Dccncli_UpdateTask_Handler,
		},
		{
			MethodName: "TaskDetail",
			Handler:    _Dccncli_TaskDetail_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _Dccncli_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dccncli.proto",
}
